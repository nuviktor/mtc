#!/bin/sh

check_if_installed() {
  if ! command -v "$1" >/dev/null 2>&1; then
    echo "$1 not installed" >&2
    exit 1
  fi
}

mark_value=6
network=192.168.1.0/24

case "$1" in
  init)
    # Limits in KB/s
    download_limit="${MTC_DL_LIMIT:-347}"
    upload_limit="${MTC_UL_LIMIT:-59}"

    echo "MTC initialising"
    echo
    echo "Download limit: $download_limit KB/s"
    echo "Upload limit: $upload_limit KB/s"

    # Set up all interfaces with an HTB qdisc with a fast lane and an SFQ child qdisc
    for dev in wlan0 wlan1 eth0; do
      tc qdisc add dev "$dev" root handle 1: htb default 11

      tc class add dev "$dev" parent 1: classid 1:1 htb rate 100mbit ceil 100mbit
      tc class add dev "$dev" parent 1:1 classid 1:11 htb rate 100mbit ceil 100mbit

      tc qdisc add dev "$dev" parent 1:11 handle 10: sfq perturb 10
    done

    # Add the slow lane for the wireless interfaces, where packets being downloaded will be sent
    for dev in wlan0 wlan1; do
      tc class add dev "$dev" parent 1:1 classid 1:10 htb rate "${download_limit}kbps" ceil "${download_limit}kbps" burst 20k
    done

    # Add the same for the Internet-facing interface
    tc class add dev eth0 parent 1:1 classid 1:10 htb rate "${upload_limit}kbps" ceil "${upload_limit}kbps"

    # Add SFQ qdiscs as children to these slow lanes 
    for dev in wlan0 wlan1 eth0; do
      tc qdisc add dev "$dev" parent 1:10 handle 11: sfq perturb 10
    done

    # Set up filters to send marked packets to the slow lane
    for dev in wlan0 wlan1 eth0; do
      tc filter add dev "$dev" protocol ip parent 1: prio 1 handle "$mark_value" fw flowid 1:10
    done

    # Finally create an ipset for holding a list of IP addresses and the appropriate iptables rules
    ipset new mtc bitmap:ip range "$network"

    iptables -t mangle -F fwmark
    iptables -t mangle -A fwmark -j CONNMARK --restore-mark
    iptables -t mangle -A fwmark -m mark ! --mark 0 -j ACCEPT
    iptables -t mangle -A fwmark -m set --match-set mtc src -j MARK --set-mark "$mark_value"

    iptables -t mangle -F POSTROUTING
    iptables -t mangle -A POSTROUTING -j CONNMARK --save-mark
  ;;

  clear|flush)
    ipset flush mtc
  ;;

  halt|kill)
    for dev in wlan0 wlan1 eth0; do
      tc qdisc del dev "$dev" root 
    done

    # Assumes my script will be the only thing editing these chains
    iptables -t mangle -F fwmark
    iptables -t mangle -F POSTROUTING

    ipset destroy mtc
  ;;

  count)
    echo "Connections marked: $(grep -c mark="$mark_value" /proc/net/nf_conntrack)"
  ;;

  host)
    check_if_installed dig

    if [ ! -n "$2" ]; then
      echo "No host argument supplied." >&2
      exit 1
    fi

    ip="$(dig +short +search "$2")"

    if [ ! -n "$ip" ]; then
      echo "Could not find an IP for supplied host." >&2
      exit 1
    fi

    ipset add mtc "$ip"
  ;;

  list)
    ipset list mtc
  ;;

  help)
    echo "Usage: mtc COMMAND|IPV4-ADDRESS"
    echo
    echo "Commands:"
    echo "  init        - initialise setup, adding qdiscs, iptables rules, etc.; to be ran before adding IPv4 address filters."
    echo "                Specifying the environment variables MTC_DL_LIMIT and MTC_UL_LIMIT in KB/s allows customisation of the"
    echo "                default limits."
    echo "  clear|flush - wipe the IPv4 addresses being throttled."
    echo "  halt|kill   - deinitialise setup, removing all qdiscs and iptables rules."
    echo "  count       - display a count of marked connections."
    echo "  host HOST   - add an IP address to be throttled by hostname."
    echo "  help        - display this help snippet."
  ;;

  *) # Assumes argument is an IPv4 address
    if [ ! -n "$1" ]; then
      echo "No arguments supplied."
      exit 1
    fi

    ipset add mtc "$1"
  ;;
esac
